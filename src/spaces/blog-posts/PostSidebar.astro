---
import type { CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"blogPosts">;
  timeToRead: string;
}

const { post, timeToRead } = Astro.props;
const { title, status, publishedDate, tags, description } = post.data;
---

<aside
  class="p-6 h-screen sticky top-24 hidden xl:block border-l border-white/10 font-semibold"
>
  <!-- title and description -->
  <h1 class="font-heading gradient-text text-3xl sm:text-xxl">
    {title}
  </h1>
  {description && <p class="text-sm text-zinc-400 mt-1">{description}</p>}

  <!-- status, publishedDate, timeToRead -->
  <div class="grid grid-cols-1 gap-2 my-4">
    <h3 class="capitalize">{status}</h3>
    <span class="text-sm gradient-text">
      {
        new Date(publishedDate).toLocaleDateString("en", {
          day: "numeric",
          month: "short",
          year: "numeric",
        })
      }
    </span>
    <span class="text-xs sm:text-sm">
      {timeToRead}
    </span>
  </div>

  <hr class="border-white/20 my-4" />

  <!-- Tags -->
  {
    tags?.length ? (
      <div>
        <h2 class="text-lg font-semibold mb-2">Topics</h2>
        <div class="flex flex-wrap gap-2">
          {tags.map((tag) => (
            <span class="bg-gray-800 text-gray-300 px-3 py-1 rounded-full text-sm">
              {tag}
            </span>
          ))}
        </div>
      </div>
    ) : null
  }
</aside>
